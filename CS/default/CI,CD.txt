URL : https://www.redhat.com/ko/topics/devops/what-is-ci-cd
CI/CD :
애플리케이션 개발 단계를 자동화하여 애플리케이션을 더욱 짧은 주기로 고객에게 제공하는 방법.
기본 개념은 지속적인 통합, 지속적인 서비스 제공, 지속적인 배포입니다.
새로운 코드 통합으로 인해 개발 및 운영팀에 발생하는 문제(일명 "통합 지옥(integration hell)")를 해결하기 위한 솔루션입니다.

특히, CI/CD는 애플리케이션의 통합 및 테스트 단계에서부터 제공 및 배포에 이르는 애플리케이션의 라이프사이클 전체에 걸쳐 지속적인 자동화와 지속적인 모니터링을 제공합니다. 이러한 구축 사례를 일반적으로 “CI/CD 파이프라인”이라 부르며, 개발 및 운영팀의 애자일 방식 협력을 통해 DevOps 또는 SRE(사이트 신뢰성 엔지니어링) 방식으로 지원됩니다.

CI : 개발자를 위한 자동화 프로세스인 지속적인 통합(Continuous Integration)을 의미
-> 지속적인 통합이 제대로 구현되면 애플리케이션 코드의 새로운 변경 사항이 정기적으로 빌드 및 테스트를 거쳐 공유 리포지토리에 병합됩니다. 따라서 여러 명의 개발자가 동시에 애플리케이션 개발과 관련된 코드 작업을 할 경우 서로 충돌하는 문제를 이 방법으로 해결

CD : 지속적인 서비스 제공(Continuous Delivery) 및/또는 지속적인 배포(Continuous Deployment)를 의미하며 이 두 용어는 상호 교환하여 사용됩니다. 두 가지 의미 모두 파이프라인의 추가 단계에 대한 자동화를 뜻하지만 때로는 얼마나 많은 자동화가 이루어지고 있는지를 설명하기 위해 별도로 사용

툴 종류 : Tekton Pipelines, Jenkins , Tekton Pipelines,  GitLab, CircleCI, Travis CI, Atlassian Bamboo 
Spinnaker: 멀티클라우드 환경을 위해 구축된 CD 플랫폼.
GoCD: 모델링 및 시각화에 중점을 둔 CI/CD 서버
Concourse: "지속적인 오픈소스 작업 툴".
Screwdriver: CD용으로 설계된 빌드 플랫폼.