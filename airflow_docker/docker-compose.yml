version: '3'
services:
  airflow:
    container_name: ${AIRFLOW_HOSTNAME}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${AIRFLOW_PORT}:8080"
      - "${JUPYTER_PORT}:8888"
    environment:
      - JUPYTER_PASSWORD=${JUPYTER_PASSWORD}
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRE_ID}:${POSTGRE_PW}@${POSTGRESQLDB_HOSTNAME}:${POSTGRE_PORT}/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False  # 원래 설정
      - AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE=Asia/Seoul
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Seoul
      - EXECUTOR=Local
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    depends_on:
      - postgres
    command: >
      bash -c "/home/airflow/init_airflow.sh & /home/airflow/start_jupyter.sh & wait"

  postgres:
    image: postgres:latest
    container_name: ${POSTGRESQLDB_HOSTNAME}
    ports:
      - "${POSTGRE_PORT}:5432"
    environment:
      POSTGRES_DB: airflow
      POSTGRES_USER: ${POSTGRE_ID}
      POSTGRES_PASSWORD: ${POSTGRE_PW}
      TZ: "Asia/Seoul"
    volumes:
      - ./db:/var/lib/postgresql/data
    restart: always
      # 여기부터 작성#
      #
      #
    ##Kafka 00
  zookeeper-1:
    image: confluentinc/cp-zookeeper:5.5.1
    container_name: ${ZOOKEEPER_HOSTNAME}
    ports:
      - '${ZOOKEEPER_PORT}:32181'
    environment:
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT}
      ZOOKEEPER_TICK_TIME: 2000


  kafka-1:
    image: confluentinc/cp-kafka:5.5.1
    container_name: ${KAFKA1_HOSTNAME}
    ports:
      - '${KAFKA1_PORT}:9092'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:${ZOOKEEPER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-1:${INTERNAL_KAFKA1},EXTERNAL://localhost:${KAFKA1_PORT}
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3


  kafka-2:
    image: confluentinc/cp-kafka:5.5.1
    container_name: ${KAFKA2_HOSTNAME}
    ports:
      - '${KAFKA2_PORT}:9093'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:${ZOOKEEPER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-2:${INTERNAL_KAFKA2},EXTERNAL://localhost:${KAFKA2_PORT}
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
    

  kafka-3:
    image: confluentinc/cp-kafka:5.5.1
    container_name: ${KAFKA3_HOSTNAME}
    ports:
      - '${KAFKA3_PORT}:9094'
    depends_on:
      - zookeeper-1
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:${ZOOKEEPER_PORT}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-3:${INTERNAL_KAFKA3},EXTERNAL://localhost:${KAFKA3_PORT}
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_NUM_PARTITIONS: 3
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: ${KAFKAUI_HOSTNAME}
    ports:
      - "${kafka_ui}:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka-1:${INTERNAL_KAFKA1},kafka-2:${INTERNAL_KAFKA2},kafka-3:${INTERNAL_KAFKA3}
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper-1:${ZOOKEEPER_PORT}
